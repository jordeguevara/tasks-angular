{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-item-button/add-item-button.component.css","webpack:///./src/app/add-item-button/add-item-button.component.html","webpack:///./src/app/add-item-button/add-item-button.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/event-form/event-form.component.css","webpack:///./src/app/event-form/event-form.component.html","webpack:///./src/app/event-form/event-form.component.ts","webpack:///./src/app/event-item.service.ts","webpack:///./src/app/event.ts","webpack:///./src/app/events.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"button {\\nborder-radius: 75%;\\nposition: relative;\\nleft: 89%;\\n}\\n\\n.card-header {\\n    background-color: #DCD8CF;;\\n    color: black;\\n}\\n\\n.card-body {\\n    background-color: white;\\n    color: black;\\n}\\n\\n.panel-body{\\n    background-color:#DCD8CF;\\n   \\n}\\n\\n.card-footer{ background-color: #DCD8CF;  color: black;}\\n\\n.form-check-input{\\n    -webkit-transform: scale(1.5);\\n            transform: scale(1.5);\\n    margin-right: 20px;\\n}\\n\\n.drop-desc{\\n    color:#E25D33;\\n    -webkit-animation: blink 1s linear infinite;\\n            animation: blink 1s linear infinite;\\n}\\n\\n@-webkit-keyframes blink {\\n    0%{opacity: 0;}\\n    50%{opacity: .5;}\\n    100%{opacity: 1;}\\n}\\n\\n@keyframes blink {\\n    0%{opacity: 0;}\\n    50%{opacity: .5;}\\n    100%{opacity: 1;}\\n}\"","module.exports = \"\\n\\n\\n<div *ngFor =\\\"let event of events\\\">\\n\\t\\t<div class=\\\"panel panel-default\\\" >\\n\\t\\t\\t\\t<div class=\\\"panel-body\\\">\\n\\t\\n\\t\\t\\t\\t<div class=\\\"card text-center\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-header\\\"></div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-check\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" id=\\\"defaultCheck1\\\" (click)=\\\"event.isCompleted = submitted;\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"defaultCheck1\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{event.title | uppercase}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{event.isCompleted}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{submitted}}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"drop-desc\\\" [hidden]=\\\"isDropped\\\" (click)=\\\"isActive=false; isDropped=true\\\" >V</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"drop-desc\\\" [hidden]=\\\"isActive\\\" (click)=\\\"isActive=true; isDropped=false\\\" >^</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p [hidden]=\\\"isActive\\\" class=\\\"card-text\\\">{{event.description}}</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t    </div>\\n\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"card-footer text-muted\\\">2 days ago</div>\\n\\t\\t\\t  \\t</div>\\n\\n\\n\\n\\n\\n\\t\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {EVENTS} from '../events';\n\n\n\n@Component({\n  selector: 'app-add-item-button',\n  templateUrl: './add-item-button.component.html',\n  styleUrls: ['./add-item-button.component.css']\n})\nexport class AddItemButtonComponent implements OnInit {\n  constructor() { \t\n  }\n  events = EVENTS;\n  submitted :boolean = true;\n\n  isActive =true;\n  isDropped =false;\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"@import url('https://fonts.googleapis.com/css?family=Arvo');\\n\\nh3 {\\n\\ttext-align: center;\\n}\\n\\n.jumbotron {\\n\\tbackground-color:#E25D33;\\n}\\n\\n.header-title{\\n\\ttext-align: center;\\n\\tcolor:  #DCD8CF;\\n\\tfont-family: 'Arvo', serif;\\n\\tfont-weight:  700;\\n}\\n\\n.panel-heading{\\n\\tbackground-color:#DCD8CF;\\n}\\n\\n.panel-body{\\n\\tbackground-color:#DCD8CF;\\n}\"","module.exports = \"\\n  \\n<div class=\\\"container\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <h1 class=\\\"header-title\\\"> Daily Tasks</h1>\\n  </div>\\n\\n\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-body\\\">\\n      <h3>{{title}}</h3>\\n        <app-event-form></app-event-form>\\n    </div>\\n\\t\\n  </div>\\n\\n  <app-add-item-button></app-add-item-button>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  date = new Date();\n  dateTitle = this.date.toString().split(\" \").splice(0,4);\n\n  title = this.dateTitle.join(\" \");\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule}   from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { AddItemButtonComponent } from './add-item-button/add-item-button.component';\nimport { EventFormComponent } from './event-form/event-form.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddItemButtonComponent,\n    EventFormComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".ng-valid[required], .ng-valid.required  {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n.ng-invalid:not(form)  {\\n  border-left: 5px solid #a94442; /* red */\\n}\\n\\n.form-control {\\n\\twidth: 90%;\\n}\\n\\n.full-width {\\n  width: 100%;\\n}\\n\\n.btn{\\n  margin-right: 10px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>To Do:</h1>\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n\\n        <div class=\\\"form-group\\\"> \\n              <label for=\\\"title\\\">Title</label>\\n              <input id=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Title\\\" ngModel name =\\\"title\\\" #title=\\\"ngModel\\\">\\n\\n              <!-- <div [hidden]=\\\"name.valid || name.pristine\\\" class=\\\"alert alert-danger\\\">\\n       \\t\\t     Name is required\\n  \\t\\t\\t      </div> -->\\n        </div>\\n\\n        <div class=\\\"form-group\\\"> \\n            <label for=\\\"description \\\">Description</label>\\n            <textarea id=\\\"description\\\" class=\\\"form-control\\\" placeholder=\\\"Tell me more\\\" ngModel name=\\\"description\\\" #description=\\\"ngModel\\\"  ></textarea>\\n           \\n            <!-- <div [hidden]=\\\"description.valid || description.pristine\\\"\\tclass=\\\"alert alert-danger form-control\\\">\\n             \\t\\tDescription is required\\n    \\t\\t\\t  </div> -->\\n        </div>\\n        <div class=\\\"row text-center\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"newEvent();\\\">Clear</button>\\n        </div>\\n\\n    </form>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n     <!--\\n\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"description \\\">Description</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" required [(ngModel)]=\\\"model.description\\\" name=\\\"description\\\" #description=\\\"ngModel\\\">\\n                <div [hidden]=\\\"description.valid || description.pristine\\\"\\n             \\t\\tclass=\\\"alert alert-danger\\\">\\n             \\t\\tDescription is required\\n    \\t\\t\\t      </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n          \\n      <input  matInput  [matDatepicker]=\\\"picker\\\" placeholder=\\\"Start Date\\\" >\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker [startAt]=\\\"startDate\\\"></mat-datepicker>\\n          {{model.startDate}}\\n\\n           <label for=\\\"startDate\\\">Start Date</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" required [(ngModel)]=\\\"model.startDate\\\" name=\\\"startDate\\\" #startDate =\\\"ngModel\\\"> -->\\n          \\n<!--            <input [matDatepicker]=\\\"myDatepicker\\\">\\n           <mat-datepicker #myDatepicker></mat-datepicker> -->\\n\\n    \\n<!--             <div [hidden]=\\\"startDate.valid || startDate.pristine\\\"\\n           \\t\\t\\tclass=\\\"alert alert-danger\\\">\\n           \\t\\t\\tStart Date is required\\n             </div> \\n          </div> -->\\n\\n     <!--     <div class=\\\"form-group\\\">\\n  <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Due Date\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker2></mat-datepicker> \\n            <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Start Date\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #picker startView=\\\"year\\\" [startAt]=\\\"startDate\\\"></mat-datepicker> -->\\n   <!--          <label for=\\\"endDate\\\">Due Date</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" required [(ngModel)]=\\\"model.endDate\\\" name=\\\"endDate\\\" #endDate =\\\"ngModel\\\">\\n            <div [hidden]=\\\"endDate.valid || endDate.pristine\\\"\\n         \\t\\t\\tclass=\\\"alert alert-danger\\\">\\n         \\t\\t\\tEnd Date is required\\n         \\t\\t</div> \\n         </div>\\n     \\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"newEvent(); eventForm.reset()\\\">Clear</button>\\n     \\n        </form>\\n    </div>\\n\\n\\n    -->\"","import { Component,Output, OnInit,Input } from '@angular/core';\nimport {EventItem} from '../event';\nimport {EventItemService} from '../event-item.service'\nimport {FormControl} from '@angular/forms';\nimport {NgForm} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-event-form',\n  templateUrl: './event-form.component.html',\n  styleUrls: ['./event-form.component.css']\n})\n\nexport class EventFormComponent implements OnInit {\n\n  constructor(private eventItemService: EventItemService) { } //nothing yet\n\n  count: number =0;\n  anotherEvent: EventItem;\n  \n  ngOnInit() {\n \n  }\n\n  addEvent(event: EventItem) : void { //Adds eventItem to EVENTS ArrayList\n   this.eventItemService.addEventItems(event);\n  }\n\n  onSubmit(f: NgForm) { \n    let title =f.value.title;\n    let description =f.value.description;\n\n    this.anotherEvent = new EventItem(this.count++,title,description,false);\n    console.log(this.anotherEvent);\n     this.addEvent(this.anotherEvent); //adds new event to through EventItemServce\n   }\n\n}\n","import { Injectable } from '@angular/core';\nimport {EventItem} from './event'\nimport {EVENTS} from './events'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventItemService {\n\n  constructor() { }\n\n  addEventItems(event : EventItem) : void {\n  \tEVENTS.push(event);\n  }\n\n  getEventItems() : Array<EventItem> {\n  \treturn EVENTS;\n  }\n\n}\n","export class EventItem {\n\n\tconstructor\n\t(\n\t\tpublic\tid : number,\n\t\tpublic\ttitle : string,\n\t\tpublic \tdescription: string,\n\t\tpublic \tisCompleted: boolean\n\t)\n\n\t{\n\n\t} \n\n\tclear() :void {\n\t\tthis.title = \"\";\n\t\tthis.description =\"\";\n\t\tthis.isCompleted= false;\n\t}\n\t\n}","import {EventItem} from './event';\n\nexport var EVENTS: Array<EventItem> = [\n\t\n];","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}